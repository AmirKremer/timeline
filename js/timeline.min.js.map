{"version":3,"sources":["timeline.js"],"names":["timeline","collection","options","timelines","warningLabel","innerWidth","winWidth","window","defaultSettings","mode","forceVerticalMode","testValues","value","settingName","console","itemWrap","el","wrapper","classes","classList","add","parentNode","isElementInViewport","rect","getBoundingClientRect","document","documentElement","clientHeight","innerHeight","top","height","left","width","position","currentIndex","scroller","str","offsetLeft","tl","style","msTransform","transform","timelineEl","evenIndexTallest","items","arrowPrev","arrowNext","maxIndex","forEach","setHeightandWidths","setWidths","wrap","offsetWidth","visibleItems","item","itemWidth","scrollerWidth","length","i","offsetHeight","oddIndexTallest","addNavigation","prevArrow","createElement","nextArrow","topPosition","className","textContent","disabled","appendChild","addHorizontalDivider","querySelector","remove","horizontalDivider","slideTimeline","navArrows","arrow","addEventListener","e","preventDefault","contains","timelinePosition","wrapElements","removeAttribute","querySelectorAll","removeChild","resetTimelines","setUpHorinzontalTimeline","lastVisibleIndex","divider","setUpVerticalTimeline","setTimeout","opacity","call","dataset","id","verticalStartPosition","data","warn","Error","errorPart","timelineName","slice","children","message","setUpTimelines","clearTimeout","resizeTimer","newWinWidth","jQuery","opts","this"],"mappings":"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","file":"timeline.min.js","sourcesContent":["function timeline(collection, options) {\r\n  const timelines = [];\r\n  const warningLabel = 'Timeline:';\r\n  let winWidth = window.innerWidth;\r\n  let resizeTimer;\r\n  let currentIndex = 0;\r\n\r\n  // Set default settings\r\n  const defaultSettings = {\r\n    mode: 'vertical',\r\n    forceVerticalMode: 600,\r\n    verticalStartPosition: 'left',\r\n    visibleItems: 3\r\n  };\r\n\r\n  // Helper function to test whether values are an integer\r\n  function testValues(value, settingName) {\r\n    if (typeof value !== 'number' && value % 1 !== 0) {\r\n      console.warn(`${warningLabel} Supplied number '${value}' for ${settingName} is not an integer.`);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // Helper function to wrap an element in another HTML element\r\n  function itemWrap(el, wrapper, classes) {\r\n    wrapper.classList.add(classes);\r\n    el.parentNode.insertBefore(wrapper, el);\r\n    wrapper.appendChild(el);\r\n  }\r\n\r\n  // Helper function to wrap each element in a group with other HTML elements\r\n  function wrapElements(items) {\r\n    items.forEach((item) => {\r\n      itemWrap(item.querySelector('.timeline__content'), document.createElement('div'), 'timeline__content__wrap');\r\n      itemWrap(item.querySelector('.timeline__content__wrap'), document.createElement('div'), 'timeline__item__inner');\r\n    });\r\n  }\r\n\r\n  // Helper function to check if an element is partially in the viewport\r\n  function isElementInViewport(el) {\r\n    const rect = el.getBoundingClientRect();\r\n    return (\r\n      rect.top <= (window.innerHeight || document.documentElement.clientHeight) * 0.85 &&\r\n      rect.left <= (window.innerWidth || document.documentElement.clientWidth) &&\r\n      (rect.top + rect.height) >= 0 &&\r\n      (rect.left + rect.width) >= 0\r\n    );\r\n  }\r\n\r\n  // Create timelines\r\n  function createTimelines(timelineEl) {\r\n    const timelineName = timelineEl.id ? `#${timelineEl.id}` : `.${timelineEl.className}`;\r\n    const errorPart = 'could not be found as a direct descendant of';\r\n    const data = timelineEl.dataset;\r\n    let wrap;\r\n    let scroller;\r\n    let items;\r\n    let {\r\n      mode, verticalStartPosition, forceVerticalMode, visibleItems\r\n    } = defaultSettings;\r\n    if (data.mode) {\r\n      ({ mode } = data);\r\n    } else if (options && options.mode) {\r\n      ({ mode } = options);\r\n    }\r\n    if (data.verticalStartPosition) {\r\n      ({ verticalStartPosition } = data);\r\n    } else if (options && options.verticalStartPosition) {\r\n      ({ verticalStartPosition } = options);\r\n    }\r\n    if (data.forceVerticalMode) {\r\n      ({ forceVerticalMode } = data);\r\n    } else if (options && options.forceVerticalMode) {\r\n      ({ forceVerticalMode } = options);\r\n    }\r\n    if (data.visibleItems) {\r\n      ({ visibleItems } = data);\r\n    } else if (options && options.visibleItems) {\r\n      ({ visibleItems } = options);\r\n    }\r\n\r\n    if (mode !== 'horizontal' && mode !== 'vertical') {\r\n      console.warn(`${warningLabel}The mode '${mode}' was not recognised`);\r\n      ({ mode } = defaultSettings);\r\n    }\r\n\r\n    if (verticalStartPosition !== 'left' && verticalStartPosition !== 'right') {\r\n      console.warn(`${warningLabel}The start position '${verticalStartPosition}' was not recognised`);\r\n      ({ verticalStartPosition } = defaultSettings);\r\n    }\r\n\r\n    if (!forceVerticalMode || !testValues(forceVerticalMode, \"'forceVerticalMode'\")) {\r\n      ({ forceVerticalMode } = defaultSettings);\r\n    }\r\n\r\n    if (!visibleItems || !testValues(visibleItems, \"'visibleItems'\")) {\r\n      ({ visibleItems } = defaultSettings);\r\n    }\r\n\r\n    try {\r\n      wrap = timelineEl.querySelector('.timeline__wrap');\r\n      if (!wrap) {\r\n        throw new Error(`${warningLabel}.timeline__wrap ${errorPart} ${timelineName}`);\r\n      } else {\r\n        scroller = wrap.querySelector('.timeline__items');\r\n        if (!scroller) {\r\n          throw new Error(`${warningLabel}.timeline__items ${errorPart} .timeline__wrap`);\r\n        } else {\r\n          items = [].slice.call(scroller.children, 0);\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.warn(e.message);\r\n      return false;\r\n    }\r\n\r\n    timelines.push({\r\n      timelineEl,\r\n      wrap,\r\n      scroller,\r\n      mode,\r\n      verticalStartPosition,\r\n      items,\r\n      visibleItems,\r\n      forceVerticalMode\r\n    });\r\n  }\r\n\r\n  if (collection.length) {\r\n    [].forEach.call(collection, createTimelines);\r\n  }\r\n\r\n  // Set height and widths of timeline elements and viewport\r\n  function setHeightandWidths(tl) {\r\n    // Set widths of items and viewport\r\n    function setWidths() {\r\n      tl.itemWidth = tl.wrap.offsetWidth / tl.visibleItems;\r\n      tl.items.forEach((item) => {\r\n        item.style.width = `${tl.itemWidth}px`;\r\n      });\r\n      tl.scrollerWidth = tl.itemWidth * tl.items.length;\r\n      tl.scroller.style.width = `${tl.scrollerWidth}px`;\r\n    }\r\n\r\n    // Set height of items and viewport\r\n    function setHeights() {\r\n      let oddIndexTallest = 0;\r\n      let evenIndexTallest = 0;\r\n      tl.items.forEach((item, i) => {\r\n        item.style.height = 'auto';\r\n        const height = item.offsetHeight;\r\n        if (i % 2 === 0) {\r\n          evenIndexTallest = height > evenIndexTallest ? height : evenIndexTallest;\r\n        } else {\r\n          oddIndexTallest = height > oddIndexTallest ? height : oddIndexTallest;\r\n        }\r\n      });\r\n      tl.items.forEach((item, i) => {\r\n        if (i % 2 === 0) {\r\n          item.style.height = `${evenIndexTallest}px`;\r\n        } else {\r\n          item.style.height = `${oddIndexTallest}px`;\r\n          item.style.transform = `translateY(${evenIndexTallest}px)`;\r\n        }\r\n      });\r\n      tl.scroller.style.height = `${evenIndexTallest + oddIndexTallest}px`;\r\n    }\r\n\r\n    if (window.innerWidth > tl.forceVerticalMode) {\r\n      setWidths();\r\n      setHeights();\r\n    }\r\n  }\r\n\r\n  // Create and add arrow controls to horizontal timeline\r\n  function addNavigation(tl) {\r\n    if (tl.items.length > tl.visibleItems) {\r\n      const prevArrow = document.createElement('button');\r\n      const nextArrow = document.createElement('button');\r\n      const topPosition = tl.items[0].offsetHeight;\r\n      prevArrow.className = 'timeline-nav-button timeline-nav-button--prev';\r\n      nextArrow.className = 'timeline-nav-button timeline-nav-button--next';\r\n      prevArrow.textContent = 'Previous';\r\n      nextArrow.textContent = 'Next';\r\n      prevArrow.style.top = `${topPosition}px`;\r\n      nextArrow.style.top = `${topPosition}px`;\r\n      if (currentIndex === 0) {\r\n        prevArrow.disabled = true;\r\n      } else if (currentIndex + 1 === tl.items.length) {\r\n        nextArrow.disabled = true;\r\n      }\r\n      tl.timelineEl.appendChild(prevArrow);\r\n      tl.timelineEl.appendChild(nextArrow);\r\n    }\r\n  }\r\n\r\n  // Add the centre line to the horizontal timeline\r\n  function addHorizontalDivider(tl) {\r\n    if (tl.timelineEl.querySelector('.timeline-divider')) {\r\n      tl.timelineEl.querySelector('.timeline-divider').remove();\r\n    }\r\n    const topPosition = tl.items[0].offsetHeight;\r\n    const horizontalDivider = document.createElement('span');\r\n    horizontalDivider.className = 'timeline-divider';\r\n    horizontalDivider.style.top = `${topPosition}px`;\r\n    tl.timelineEl.appendChild(horizontalDivider);\r\n  }\r\n\r\n  // Calculate the new position of the horizontal timeline\r\n  function timelinePosition(tl) {\r\n    const position = tl.items[currentIndex].offsetLeft;\r\n    const str = `translate3d(-${position}px, 0, 0)`;\r\n    tl.scroller.style.webkitTransform = str;\r\n    tl.scroller.style.msTransform = str;\r\n    tl.scroller.style.transform = str;\r\n  }\r\n\r\n  // Make the horizontal timeline slide\r\n  function slideTimeline(tl) {\r\n    const navArrows = tl.timelineEl.querySelectorAll('.timeline-nav-button');\r\n    const arrowPrev = tl.timelineEl.querySelector('.timeline-nav-button--prev');\r\n    const arrowNext = tl.timelineEl.querySelector('.timeline-nav-button--next');\r\n    const maxIndex = tl.items.length - tl.visibleItems;\r\n    [].forEach.call(navArrows, (arrow) => {\r\n      arrow.addEventListener('click', function(e) {\r\n        e.preventDefault();\r\n        currentIndex = this.classList.contains('timeline-nav-button--next') ? (currentIndex += 1) : (currentIndex -= 1);\r\n        if (currentIndex === 0) {\r\n          arrowPrev.disabled = true;\r\n          arrowNext.disabled = false;\r\n        } else if (currentIndex === maxIndex) {\r\n          arrowPrev.disabled = false;\r\n          arrowNext.disabled = true;\r\n        } else {\r\n          arrowPrev.disabled = false;\r\n          arrowNext.disabled = false;\r\n        }\r\n        timelinePosition(tl);\r\n      });\r\n    });\r\n  }\r\n\r\n  // Set up horizontal timeline\r\n  function setUpHorinzontalTimeline(tl) {\r\n    tl.timelineEl.classList.add('timeline--horizontal');\r\n    setHeightandWidths(tl);\r\n    timelinePosition(tl);\r\n    addNavigation(tl);\r\n    addHorizontalDivider(tl);\r\n    slideTimeline(tl);\r\n  }\r\n\r\n  // Set up vertical timeline\r\n  function setUpVerticalTimeline(tl) {\r\n    let lastVisibleIndex = 0;\r\n    tl.items.forEach((item, i) => {\r\n      item.classList.remove('animated', 'fadeIn');\r\n      if (!isElementInViewport(item) && i > 0) {\r\n        item.classList.add('animated');\r\n      } else {\r\n        lastVisibleIndex = i;\r\n      }\r\n      const divider = tl.verticalStartPosition === 'left' ? 1 : 0;\r\n      if (i % 2 === divider && window.innerWidth > defaultSettings.forceVerticalMode) {\r\n        item.classList.add('timeline__item--right');\r\n      } else {\r\n        item.classList.add('timeline__item--left');\r\n      }\r\n    });\r\n    for (let i = 0; i < lastVisibleIndex; i += 1) {\r\n      tl.items[i].classList.remove('animated', 'fadeIn');\r\n    }\r\n    // Bring elements into view as the page is scrolled\r\n    window.addEventListener('scroll', () => {\r\n      tl.items.forEach((item) => {\r\n        if (isElementInViewport(item)) {\r\n          item.classList.add('fadeIn');\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Reset timelines\r\n  function resetTimelines(tl) {\r\n    currentIndex = 0;\r\n    tl.timelineEl.classList.remove('timeline--horizontal', 'timeline--mobile');\r\n    tl.scroller.removeAttribute('style');\r\n    tl.items.forEach((item) => {\r\n      item.removeAttribute('style');\r\n      item.classList.remove('animated', 'fadeIn', 'timeline__item--left', 'timeline__item--right');\r\n    });\r\n    const navArrows = tl.timelineEl.querySelectorAll('.timeline-nav-button');\r\n    [].forEach.call(navArrows, (arrow) => {\r\n      arrow.parentNode.removeChild(arrow);\r\n    });\r\n  }\r\n\r\n  // Set up the timelines\r\n  function setUpTimelines() {\r\n    timelines.forEach((tl) => {\r\n      tl.timelineEl.style.opacity = 0;\r\n      if (!tl.timelineEl.classList.contains('timeline--loaded')) {\r\n        wrapElements(tl.items);\r\n      }\r\n      resetTimelines(tl);\r\n      if (window.innerWidth <= tl.forceVerticalMode) {\r\n        tl.timelineEl.classList.add('timeline--mobile');\r\n      }\r\n      if (tl.mode === 'horizontal' && window.innerWidth > tl.forceVerticalMode) {\r\n        setUpHorinzontalTimeline(tl);\r\n      } else {\r\n        setUpVerticalTimeline(tl);\r\n      }\r\n      tl.timelineEl.classList.add('timeline--loaded');\r\n      setTimeout(() => {\r\n        tl.timelineEl.style.opacity = 1;\r\n      }, 500);\r\n    });\r\n  }\r\n\r\n  // Initialise the timelines on the page\r\n  setUpTimelines();\r\n\r\n  window.addEventListener('resize', () => {\r\n    clearTimeout(resizeTimer);\r\n    resizeTimer = setTimeout(() => {\r\n      const newWinWidth = window.innerWidth;\r\n      if (newWinWidth !== winWidth) {\r\n        setUpTimelines();\r\n        winWidth = newWinWidth;\r\n      }\r\n    }, 250);\r\n  });\r\n}\r\n\r\nif (window.jQuery) {\r\n  (($) => {\r\n    $.fn.timeline = function(opts) {\r\n      timeline(this, opts);\r\n      return this;\r\n    };\r\n  })(window.jQuery);\r\n}\r\n"]}